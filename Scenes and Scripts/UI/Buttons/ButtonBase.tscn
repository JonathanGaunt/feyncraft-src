[gd_scene load_steps=7 format=3 uid="uid://cacvu84mf2h8b"]

[ext_resource type="Texture2D" uid="uid://s5p52s3xmb4l" path="res://Textures/Buttons/centre.png" id="3"]
[ext_resource type="Theme" uid="uid://csgjunw6mjyuf" path="res://Resources/Themes/ButtonBase.tres" id="4"]
[ext_resource type="Texture2D" uid="uid://du0j082dujf0x" path="res://Textures/Buttons/centre_presse.png" id="6"]

[sub_resource type="GDScript" id="GDScript_4dapw"]
script/source = "extends PanelContainer

enum ACTIVE {INACTIVE, ACTIVE}
enum BUTTON_STATE {NORMAL, PRESSED, HOVER, DISABLED}
enum {LEFT, TOP, RIGHT, BOTTOM}

const DISABLED_ALPHA := 0.5

@export var Text : String
@export var Icon : CompressedTexture2D
@export var disabled : bool
@export var active : bool: set = set_active

@onready var button = get_node('Button')
@onready var NormalCentre := get_node('NormalCentre')
@onready var PressedCentre := get_node('PressedCentre')

@onready var NormalContainer := get_node('NormalContainer')
@onready var PressedContainer := get_node('PressedContainer')

const COLOURS = [['e6cd9c', 'd1bd97', 'e3d3c0', 'e6cd9c'], ['ffc654', 'd1bd97', 'ffd47f', 'ffc654']]

var button_state : int = BUTTON_STATE.NORMAL
var hovering : bool = false

signal pressed
signal update_cursor

func _ready():
	set_disabled(button.disabled)
	
	if Text != null:
		button.text = Text
	if Icon != null:
		change_icon(Icon)
	
	handle_button_state(button.get_draw_mode())

func _process(_delta):
	handle_button_state(button.get_draw_mode())

func set_active(new_active : bool) -> void:
	active = new_active

func handle_button_state(state : int) -> void:
	button_state = state
	
	if button_state == BUTTON_STATE.PRESSED:
		NormalCentre.visible = false
		NormalContainer.visible = false
		PressedCentre.visible = true
		PressedContainer.visible = true
		
	
	else:
		NormalCentre.visible = true
		NormalContainer.visible = true
		PressedCentre.visible = false
		PressedContainer.visible = false
		set_colour(COLOURS[int(active)][button_state])

func change_text(text : String) -> void:
	button.text = text

func change_icon(icon : CompressedTexture2D) -> void:
	NormalContainer.get_node('NormalIcon').texture = icon
	PressedContainer.get_node('PressedIcon').texture = icon

func set_colour(colour : String) -> void:
	NormalCentre.modulate = Color(colour)

func set_disabled(disable : bool) -> void:
	disabled = disable
	button.disabled = disabled
	
	if disable:
		self.modulate.a = DISABLED_ALPHA
	else:
		self.modulate.a = 1.0

func is_hovered():
	return button.is_hovered()

func _on_Button_pressed():
	emit_signal('pressed')
	
func _make_custom_tooltip(for_text):
	print('Tooltip')
	var tooltip : Control = preload(\"res://Scenes and Scripts/UI/Tooltip.tscn\").instantiate()
	
	tooltip.get_node('Label').text = for_text
	
	return tooltip
"

[sub_resource type="StyleBoxEmpty" id="2"]
content_margin_left = 4.0
content_margin_top = 2.0
content_margin_right = 4.0
content_margin_bottom = 6.0

[sub_resource type="StyleBoxEmpty" id="3"]
content_margin_left = 4.0
content_margin_top = 4.0
content_margin_right = 4.0
content_margin_bottom = 4.0

[node name="ButtonBase" type="PanelContainer" groups=["UIbuttons", "buttons", "no_place"]]
self_modulate = Color(1, 1, 1, 0)
offset_right = 20.0
offset_bottom = 20.0
mouse_filter = 1
theme = ExtResource("4")
script = SubResource("GDScript_4dapw")

[node name="NormalCentre" type="NinePatchRect" parent="."]
modulate = Color(0.882353, 0.796078, 0.627451, 1)
layout_mode = 2
mouse_filter = 1
texture = ExtResource("3")
patch_margin_left = 3
patch_margin_top = 1
patch_margin_right = 3
patch_margin_bottom = 5

[node name="PressedCentre" type="NinePatchRect" parent="."]
visible = false
modulate = Color(0.819608, 0.741176, 0.592157, 1)
layout_mode = 2
mouse_filter = 1
texture = ExtResource("6")
patch_margin_left = 3
patch_margin_top = 3
patch_margin_right = 3
patch_margin_bottom = 3

[node name="NormalContainer" type="PanelContainer" parent="."]
self_modulate = Color(1, 1, 1, 0)
layout_mode = 2
mouse_filter = 1
theme_override_styles/panel = SubResource("2")

[node name="NormalIcon" type="TextureRect" parent="NormalContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
expand_mode = 1
stretch_mode = 6

[node name="PressedContainer" type="PanelContainer" parent="."]
visible = false
self_modulate = Color(1, 1, 1, 0)
layout_mode = 2
mouse_filter = 1
theme_override_styles/panel = SubResource("3")

[node name="PressedIcon" type="TextureRect" parent="PressedContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
expand_mode = 1
stretch_mode = 6

[node name="Button" type="Button" parent="."]
layout_mode = 2
size_flags_horizontal = 3
focus_mode = 0
mouse_filter = 1
action_mode = 0
icon_alignment = 1
expand_icon = true

[connection signal="mouse_entered" from="Button" to="." method="_on_Button_mouse_entered"]
[connection signal="mouse_exited" from="Button" to="." method="_on_Button_mouse_exited"]
[connection signal="pressed" from="Button" to="." method="_on_Button_pressed"]
